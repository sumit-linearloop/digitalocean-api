# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master  # or the branch you want to deploy from

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '18'  # or specify the desired version

#       - name: Set up SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
#           ssh-keyscan -H github.com >> ~/.ssh/known_hosts

#       - name: Run deployment script
#         env:
#           SERVER_IP: ${{ secrets.SERVER_IP }}  # Pass the server IP from secrets
#         run: |
#           echo "Starting deployment process..."
#           echo "Current directory: $(pwd)"
#           echo "Files in current directory:"
#           ls -la
#           # Run the deployment script on the server
#           ssh -i ~/.ssh/id_rsa root@$SERVER_IP "bash -s" < ./deploy.sh || { echo "Deployment failed"; exit 1; }



# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY_ID }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H github.com >> ~/.ssh/known_hosts

#       - name: Test SSH Connection
#         run: |
#           ssh -T git@github.com || echo "SSH authentication successful but shell access not allowed"

#       - name: Run deployment script
#         run: |
#           ssh -i ~/.ssh/id_rsa root@128.199.28.236 "bash -s" < ./deploy.sh || { echo "Deployment failed"; exit 1; }


name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Specify the branch to trigger the pipeline

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the repository's code

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Load private key from secrets
          chmod 600 ~/.ssh/id_rsa  # Set permissions for the private key
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts  # Add GitHub to known hosts
          ssh-keyscan -H 128.199.28.236 >> ~/.ssh/known_hosts  # Add your server to known hosts

      - name: Test SSH Connection
        run: ssh -T git@github.com  # Test connection to GitHub

      - name: Run deployment script
        run: |
          ssh -i ~/.ssh/id_rsa root@128.199.28.236 "bash -s" < ./deploy.sh || { echo "Deployment failed"; exit 1; }

